pipeline {
  agent {
      label 'master'
  }

  options {
    buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '3')
    disableConcurrentBuilds()
    timestamps()
  }

  stages {
    stage('LoginToDockerHUB') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub_login', passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
          sh "docker login -u $USERNAME -p $PASSWORD"
        }
      }
    }
    stage('CreateDockerImage') {
      steps {
        sh 'docker build -t anpod07/nginx-test:latest .'
      }
    }
    stage('TestAndPushDockerImage') {
      steps {
        sh '''
          docker run -d --rm --name nginx-test -p 80:80 anpod07/nginx-test:latest
          docker ps --no-trunc
          sleep 2
          if [ -n `docker ps -q -f ancestor=anpod07/nginx-test` ]
           then
            echo 'HTTP HEALTH PASSED'
            docker push anpod07/nginx-test:latest
           else
            echo 'HTTP HEALTH FAILED'
          fi
          docker stop nginx-test
        '''
//           -if [ `curl -w %{http_code} -s -o /dev/null localhost` -eq 200 ]
      }
    }
//    stage('PushToDockerImage') {
//      steps {
//        sh 'docker push anpod07/nginx-test:latest'
//      }
//    }
  }
}

